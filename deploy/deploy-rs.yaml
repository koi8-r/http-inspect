apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: http-inspect-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-inspect
  namespace: default
  labels:
    app: http-inspect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-inspect
  template:
    metadata:
      labels:
        app: http-inspect
        app.kubernetes.io/name: http-inspect
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      volumes:
      - name: http-inspect-logs
        persistentVolumeClaim:
          claimName: http-inspect-logs-pvc
      - name: http-inspect-cfg
        configMap:
          name: http-inspect-cfg
      initContainers:
      - name: http-inspect-init
        image: busybox
        command:
          - echo
          - INIT
      containers:
      - name: http-inspect
        image: vpburchenya/http-inspect:v1.4
        imagePullPolicy: Always
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - name: http-inspect-cfg
          mountPath: /usr/local/app/conf
        ports:
        - containerPort: 8090
          protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: http-inspect-cfg
  namespace: default
data:
  logging.yaml: |
    version: 1
    disable_existing_loggers: true
    formatters:
      ty:
        class: log.PlainFormatter
        datefmt: |-
          %Y-%m-%dT%H:%M:%S%z
        format: >-
          event_time=%(asctime)s
          level=%(levelname)s
          module=%(name)s
          line=%(lineno)d
          log_id=%(log_id)s
          component=%(component)s
          hostname=%(hostname)s
          message=%(message)r
    handlers:
      console:
        class: log.PlainStreamHandler
        level: INFO
        stream: ext://sys.stderr
        formatter: ty
    loggers:
      "":
        handlers:
        - console
        level: INFO
        propogate: yes
      uvicorn:
        level: WARN
---
apiVersion: v1
kind: Service
metadata:
  name: http-inspect
  namespace: default
  labels:
    app: http-inspect
spec:
  type: ClusterIP
  selector:
    app: http-inspect
  ports:
  - port: 80
    targetPort: 8090
    protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: http-inspect
  namespace: default
  annotations:
    ingress.kubernetes.io/whitelist-x-forwarded-for: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: "/"

    cert-manager.io/issuer: letsencrypt-prod
    cert-manager.io/issuer-kind: ClusterIssuer

    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-realm: traefik
    ingress.kubernetes.io/auth-secret: secret
spec:
  # backend:
  #   serviceName: http-inspect
  #   servicePort: 80
  tls:
  - hosts:
    - http-inspect.typhoon.oz.net.ru
    secretName: tls-http-inspect-ingress
  rules:
  - host: http-inspect.oz.net.ru
    http:
      paths:
      - backend:
          serviceName: http-inspect
          servicePort: 80
        pathType: ImplementationSpecific

