apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: http-inspect-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-inspect
  namespace: default
  labels:
    app: http-inspect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-inspect
  template:
    metadata:
      labels:
        app: http-inspect
        app.kubernetes.io/name: http-inspect
    spec:
      volumes:
      - name: http-inspect-logs
        persistentVolumeClaim:
          claimName: http-inspect-logs-pvc
      - name: http-inspect-cfg
        configMap:
          name: http-inspect-cfg
      initContainers:
      - name: http-inspect-init
        image: busybox
        command:
          - echo
          - INIT
      containers:
      - name: http-inspect
        image: vpburchenya/http-inspect:v1.4
        imagePullPolicy: Always
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        volumeMounts:
        - name: http-inspect-cfg
          mountPath: /usr/local/app/conf
        ports:
        - containerPort: 8090
          protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: http-inspect-cfg
  namespace: default
data:
  logging.yaml: |
    version: 1
    # disable_existing_loggers: true
    handlers:
      console:
        class: log.PlainStreamHandler
        level: INFO
        stream: ext://sys.stdout
    loggers:
      "":
        handlers:
        - console
        level: INFO
        propogate: yes
      uvicorn:
        level: WARN
---
apiVersion: v1
kind: Service
metadata:
  name: http-inspect
  namespace: default
  labels:
    app: http-inspect
spec:
  type: ClusterIP
  selector:
    app: http-inspect
  ports:
  - port: 80
    targetPort: 8090
    protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: http-inspect
  namespace: default
  annotations:
    ingress.kubernetes.io/whitelist-x-forwarded-for: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: "/"

    cert-manager.io/issuer: letsencrypt-prod
    cert-manager.io/issuer-kind: ClusterIssuer

    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  # backend:
  #   serviceName: http-inspect
  #   servicePort: 80
  tls:
  - hosts:
    - http-inspect.typhoon.oz.net.ru
    secretName: tls-http-inspect-ingress
  rules:
  - host: http-inspect.typhoon.oz.net.ru
    http:
      paths:
      - backend:
          serviceName: http-inspect
          servicePort: 80
        pathType: ImplementationSpecific
---
# https://banzaicloud.com/docs/one-eye/logging-operator/crds/v1beta1/flow_types/#filter
# https://banzaicloud.com/docs/one-eye/logging-operator/plugins/filters/
# https://github.com/banzaicloud/logging-operator/blob/master/config/crd/bases/logging.banzaicloud.io_outputs.yaml
# https://github.com/banzaicloud/logging-operator/blob/master/config/crd/bases/logging.banzaicloud.io_flows.yaml
apiVersion: logging.banzaicloud.io/v1beta1
kind: Output
metadata:
  name: http-inspect-logs
  namespace: default
spec:
  loki:
    url: http://loki.typhoon-monitoring:3100
    configure_kubernetes_labels: true
    extract_kubernetes_labels: true
    line_format: key_value
    labels:
      module: module
      level: level
---
apiVersion: logging.banzaicloud.io/v1beta1
kind: Output
metadata:
  name: http-inspect-eslogs
  namespace: default
spec:
  elasticsearch:
    default_elasticsearch_version: "7"
    # id_key: log_id
    # include_timestamp: true
    # index_name: typhoon
    # reconnect_on_error: true
    # reload_on_failure: true
    # request_timeout: 15s
    ## reload_connections: false
    ## rollover_index: true
    ## suppress_type_name: true
    host: stage.ty.oz.net.ru
    port: 9200
    scheme: http
    user: elastic
    password:
      valueFrom:
        secretKeyRef:
          name: elastic-user
          key: elastic
---
apiVersion: logging.banzaicloud.io/v1beta1
kind: Flow
metadata:
  name: http-inspect-logs
  namespace: default
spec:
  localOutputRefs:
  - http-inspect-logs
  - http-inspect-eslogs
  match:
  - select:
      labels:
        # app.kubernetes.io/name: http-inspect
        app: http-inspect
  filters:
  - tag_normaliser: {}
  - parser:
      remove_key_name_field: true
      reserve_data: true
      parse:
        type: regexp
        expression: /^(?<time>[^\s]+) \[(?<level>[^\]]+)\] (?<module>.+?):\d+ - log_id=(?<log_id>[^\s]+) host_name=(?<hostname>[^\s]+) > (?<message>.*)$/
        time_key: time
        time_type: string
        time_format: "%Y-%m-%dT%H:%M:%S.%N%z"
        # utc: true
---

